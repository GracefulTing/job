<!-- 
１．雷达图多数据间隔显示清晰以及移入显示单条数据问题:(改动较大，改动了原echarts.js:3.7.1版本)
（１）显示:
	indicator:指示器,用来指定多个变量或者多个维度
	indicator.name:指示器名称
	在option下radar对name进行设置：
		 radar: [{
			        indicator:indicator,
			        triggerEvent:true,
		         	name:{
		         		formatter:function(params){
		         			count++;		
		         			if(data.length > 20){
		         				if(count % 3 == 0){
		         					return params;
		         				}else{
		         					array.push(params);
		         					return '';
		         				}
		         			}else{
		         				return params;
		         			}
		         		}
		         	},	
			}],
(2)移入：
tooltip——trigger:"axis"
主要添加函数：getAngle()以及getIndexToDisplay()
将移入要显示的样式写js里formatTooltip_new:
因为name是前后对应的,如果显示为空，移入则为空或者undefined；因此，将置空的数据存入数组，在移入需要数据的时候从数组中取出赋值。
for(var m=0;m<indicatorAxes.length;m++){
	if(indicatorAxes[m].name == ''){
		count++;
	   	for(var n=0;n<count;n++){
	   		indicatorAxes[m].name = array[n];
	   	}		
	}
}

２．关系图报错"dataIndex undefined" ,有重复节点
借助数组将要存入aNode的节点名称和数组的最后一个元素进行比较，没有则加入数组，即避免了重复。然后赋值字符串str赋值给aNode的name，最后在aNode->name不为空时将aNode插入need_all_nodes;
if(arr[arr.length-1] != name){
	arr.push(name);
	// console.log(arr);
	for(var l=0;l<arr.length;l++){
		str = arr[l];
	}
	// console.log(str);
}
if(aNode["name"] != ""){
	need_all_nodes.push(aNode);
}

3.图形分组(数据分组，但是显示清晰加线未合理展示)
（１）调节多轴间距
	尝试过刻度名最大长度适应，表达式未解决全部情况，只适用一部分。最终限定长度,超过显示...
	y轴axisLabel
			formatter:function(value){
							if(value.length > 3){
								value = value.substring(0,3) + '...';
							}
							return value;
					}
(2)分组：
	边框——axisLine,axisTick中length
	数据——如果没有数据赋值,否则找已经插入的数据，如果没有找到直接插入，找到就进行比较。判断当前轴是否是最后一个维度,然后进行比较，最后一个元素和下一个插入的相等,则加前缀，否则直接加入。因为有前缀，下次比较会受干扰，正则判断是否含有前缀并截取。
	var dimension_length =  all_dimensionality.length <= 0 ? 1 : all_dimensionality.length;
	for(var k = 0;k < dimension_length;k++){
		if(!dimensionality_show_data[k]){				
			dimensionality_show_data[k] = [aData[all_dimensionality[k]]];
		}else{
			var index = dimensionality_show_data[k].indexOf(aData[all_dimensionality[k]]);
			if(index == -1){
				dimensionality_show_data[k].push(aData[all_dimensionality[k]]);
			}else if(index != -1){
				if(all_dimensionality[dimensionality_show_data.length - 1] != all_dimensionality[k]){
					var lastVal = dimensionality_show_data[k][dimensionality_show_data[k].length-1];
					if(/YZYPD/.test(lastVal)){
						lastVal = lastVal.split("YZYPD")[1];
					}
					if(lastVal == aData[all_dimensionality[k]]){
						dimensionality_show_data[k].push("YZYPD"+ aData[all_dimensionality[k]]);
					}else{
						dimensionality_show_data[k].push(aData[all_dimensionality[k]]);
					}
				}else{
					dimensionality_show_data[k].push(aData[all_dimensionality[k]]);
				}
			}

		}
	}

4.interval
通过回调函数实现间隔显示以及过滤数据
var len = opp.xAxis[j].data.length;
opp.xAxis[j].axisTick.interval = function(index,value){
	if(index % 2 == 0 && len > 10) {
		return !/^YZYPD/.test(value)
	}else if(len < 10){
		return value;
	}else{
		return '';
	}

};
opp.xAxis[j].axisLabel.interval = function(index,value){
	if(index % 2 == 0 && len > 10) {
		return !/^YZYPD/.test(value)
	}else if(len < 10){
		return value;
	}else{
		return '';
	}
};

-->
<!-- question:
1.雷达图数据很多的时候，名字堆叠在一起，怎样间隔显示？怎样实现移入的时候显示单轴数据？将未显示的置空后移入为undefined，怎样可以在移入的时候依然可以获取到值？
解决方法:
	 修改了echarts.js文件，使得移入的时候只显示一条数据，隔两个显示一个，不显示的是将其置空的。对于移入也为空，需要提前将值存入数组中，然后判断name为空时赋值数组内容。
	 name:{
		formatter:function(params){
			count++;		
			if(data.length > 20){
				if(count % 3 == 0){
					return params;
				}else{
					array.push(params);
				//	console.log(array);
					return '';
				}
			}else{
				return params;
			}
		}
	},	

	for(var m=0;m<indicatorAxes.length;m++){
		if(indicatorAxes[m].name == ''){
			count++;
		   	for(var n=0;n<count;n++){
		   		indicatorAxes[m].name = array[n];
		   	}		
		}
	}
2.多轴条形图怎样根据y轴上的刻度名的长度调节轴与轴之间的距离？
3.条形图类目轴分组加边线(分组合并)显示清晰？
4.饼图的引导线怎么去掉？
解决:labelLine在label的position设置为'outside'时通过视觉引导线连接到扇区.
5.想知道可以实现只在移入小圆点上才显示tooltip，移入轴线时不显示吗？
暂未解决
6.如果ｘ轴或者y轴的name长度较长，在显示的时候部分显示不到，设置nameRotate后要倾斜比较平才能显示完整，但是这种情况下，如果有多个轴，name又会重叠，请问有什么好的解决方法？
暂时不显示name.
7.关系图dataIndex undefined报错问题？ -->


<!-- 
docker:
启动:docker-compose up -d
查看运行状况:docker-compose  ps
获得所有可用信息:docker-compose [COMMOND] --help
	build:创建或者再建服务
	重建:docker-compose build

	help:显示命令的帮助和使用信息

	kill:强制停止运行的容器
	docker-compose kill -s SIGKINT

	logs:显示服务的日志输出

	port:为端口绑定输出公共信息

	ps:显示容器

	rm:删除停止的容器

	run:在服务上运行一个一次性命令:
	docker-compose run web Python manage.py shell

	start:启动已存在的容器作为一个服务

	stop:停止运行的容器而不删除它们
	可以使用docker-compose start重新运行起来


	up:为一个服务搭建,创建,启动,附加到容器
	docker-compose up会集中每个容器的输出,存在时所有容器会停止
	docker-compose up -d在后台启动容器并运行



流程：
1.结构：
	projects->uicloud->主要文件dashboard/dataCollection/statements/uicloud
	在这4个文件下分别对应包含:
		static->css/img/js
		templates/html
	即:
	dashboard/migrations
			 /static/dashboard/css
			 	               /js
			 	               /img
			 /templates/dashboard/.html
	dataCollection/DataModels
				  /static/dataCollection/css
				  						/font
				  						/img
				  						/js
				  /templates/dataCollection/.html
	statements/migrations
			  /static/statements/css
			  					/js
			  					/img
			  /templates/statements/.html
	uicloud/static/css
				  /js
				  /img
		   /templates/admin/,html
		   			 /common/.html
2.执行顺序：
	获取setting.py中的配置，包括url映射的文件路径.
	ROOT_URLCONF = 'uicloud.urls'
3.响应顺序：
	 (1)浏览器提交请求
	 (2)服务器端根据url在urls.py中进行匹配，找到对应视图函数。 
		即url(r"^pallasdata$",views.IndexView.as_view())
	 (3)调用对应的视图函数,返回一个HttpRespons对象.
	 (4)django转换HttpRespons对象为一个合适的Http response，并返回给页面进行显示.
 -->


<!--  
1. Number($("#drag_wrap_content").css("paddingTop").match(/\d+/g))*2 = 24
match(/\d+/g):多次匹配数字  paddingTop:12px   0.75rem = 0.75 * 16 = 12
2. jquery.actual.js:插件，获取隐藏元素的高和宽
旧版本的jQuery获取不到隐藏的DOM元素的宽度/高度;将元素的css属性’display’设置为’none’，使用$(‘.hidden’).width();方法的到的结果为0而不是实际的宽度； 这个插件修复了jQuery的此缺陷。
$(".measureDiv").css({"marginLeft":$("#view_show_wrap").actual("width")/2-$(".measureDiv").actual("width")/2+'px',"marginTop":$("#view_show_wrap").actual("height")/2-$(".measureDiv").actual("height")/2+'px'});
3. 两个ajax请求时，一个请求数据,一个请求图形.当第一次请求的时候，出现加载动画已经完成,但是图形要等一段时间才会出现,此段时间空白。
解决方法:
两个ajax分别都有beforeSend,success函数，分别包含了加载动画和停止动画.在请求数据的时候判断是否有视图生成,只要判断是否存在”当前图表无数据“就可以，如果存在则停止动画即可。
代码：
pre_dataHandle.js:
$.ajax({
		url:"/cloudapi/v1/tables/" +current_cube_name+"/data",
		type:"post",
		dataType:"json",
		contentType: "application/json; charset=utf-8",
		async: true,
		data:JSON.stringify(handleDataPost),
		beforeSend:function(){
			var target =  $("#view_show_wrap").get(0);
		    spinner.spin(target);
		 	$(".maskLayer").show();
		},
		success:function(data){
			if(data.status == "success"){
				spinner.stop();
				$(".maskLayer").hide();
		}
});
dashboard.js:
$.ajax({
	url:"/cloudapi/v1/tables/" +current_cube_name+"/data",
	type:"post",
	dataType:"json",
	contentType: "application/json; charset=utf-8",
	async: true,
	data:JSON.stringify(handleDataPost),
	beforeSend:function(){
			var target =  $("#view_show_wrap").get(0);
			$(".maskLayer").show();
			spinner.spin(target);
	},
	success:function(data){
		if(data.status == "success"){
			//no view stop hide
			if($("#view_show_empty").css("display") == "block"){
				spinner.stop();
				$(".maskLayer").hide();
			}
		}
	}
})
4.unbind和bind配合使用:避免重复绑定使得同一个操作被执行多次.
5.sessionStorage和localStorage:
sessionStorage:本地存储一个会话中的数据，只有在同一个会话中的页面才能访问，当会话结束后数据随之销毁。不是持久化的本地存储,仅仅是会话级别的存储.
localStorage:用于持久化本地存储，除非主动删除数据,否则永远不会过期.
6.this.$el.html():
$el:指的是选中的真正的dom元素，而$()选择的是一个元素组，需要.get(0)或者[0]才能获取到真正的dom.
get:取得其中一个匹配的元素，$(this).get(0) <==> $(this)[0];
eq(index):返回的是jquery对象。
$("#xx"):获取得到一个对象。
$("#xx")[0]:得到一个标签。

eg:
<div class="lists">
	<select name="" id="" class="sel">
		<option value="a"></option>
		<option value="b"></option>
	</select>
</div>
7.获取value并判断与某个值是否相等:  value-变量需要+，字符串不需要
$(".lists .sel option[value="+值+"]");
 var selectoption = $("<option value="+dbVal+">"+dbVal+"</option>");
eg:
	if($(".lists .combo-select .custom-select option[value="+end+"]").length == 0){
	  var selectoption = $("<option value="+end+">"+end+"</option>");
	  listselect.append(selectoption);
	  listselect.comboSelect();
	}

8.
/:根目录
./:当前目录
../:父级目录

9.优先级最大:
eg: display:block !important;


10.class名字符串拼接变量：
var p = $("<p class=p"+j+">" + aMeasure +"</p>");
class:.p0  .p1 ...
 
11.
position():获取匹配元素相对父元素的偏移
offset():获取匹配元素在当前视口的相对偏移
unbind():移除被选元素的事件处理程序
data():向被选元素附加数据，或者向被选元素获取数据
	在元素上存放或读取数据,返回jQuery对象
indexOf:没有返回-1

12.toFixed:
 toFixed它是一个四舍六入五成双的诡异的方法，"四舍六入五成双"含义：对于位数很多的近似数，当有效位数确定后，其后面多余的数字应该舍去，只保留有效数字最末一位，这种修约（舍入）规则是“四舍六入五成双”，也即“4舍6入5凑偶”这里“四”是指≤4 时舍去，"六"是指≥6时进上，"五"指的是根据5后面的数字来定，当5后有数时，舍5入1；当5后无有效数字时，需要分两种情况来讲：①5前为奇数，舍5入1；②5前为偶数，舍5不进。（0是偶数）

-->
